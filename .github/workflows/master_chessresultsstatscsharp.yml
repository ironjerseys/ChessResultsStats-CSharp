name: Build, test, and deploy ASP.Net Core app to Azure Web App - ChessResultsStatsCSharp

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Restore dependencies
        run: dotnet restore

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Run tests
        run: dotnet test --configuration Release --collect:"XPlat Code Coverage"
        env:
          DBPASSWORD: ${{ secrets.DBPASSWORD }}

      - name: Publish test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/TestResults/*.trx'

      - name: Publish code coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: '**/coverage.cobertura.xml'

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build-and-test
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build-and-test job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Set environment variables
        run: |
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV


      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'ChessResultsStatsCSharp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_5A1341E86D93474492F4C90F43E37242 }}
          package: .
